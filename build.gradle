buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            // Add maven repo for SpecialSource
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
	classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'de.undercouch:gradle-download-task:1.2'
    }
}

apply plugin: 'scala'
apply plugin: 'forge'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'de.undercouch.download'

ext.buildProps = file "build.properties"

buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

repositories {
    maven {
	name = "forge"
	url = "http://files.minecraftforge.net/maven"
    }
}

dependencies {
	compile fileTree(dir: 'lib', include: '*.jar')
}

group = "projektor"
archivesBaseName = "Projektor"

minecraft {
    version = "${config.version.minecraft}-${config.version.forge}"

    replaceIn "reference/Reference.java"
    replace "@MAJOR@", config.version.mod.major
    replace "@MINOR@", config.version.mod.minor
    replace "@REVIS@", config.version.mod.revis

    if (System.getenv("BUILD_NUMBER") != null) {
        replace "@BUILD@", System.getenv("BUILD_NUMBER")
    }
    else
    {
        replace "@BUILD@", "ManuallyBuilt"
    }
}

processResources {
    from 'build.properties'
}

allprojects {
    version = "${config.version.minecraft}-${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}"

    if (System.getenv("BUILD_NUMBER") != null) {
        version += ".${System.getenv("BUILD_NUMBER")}"
    } else {
        version += "-ManuallyBuilt"
    }

    jar {
        dependsOn ":copyBuildXml"
        destinationDir = file (rootProject.getRootDir().getPath() + '/output')
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifact jar
            }
        }
        repositories {
            maven {
                url "file://var/www/maven"
            }
        }
    }
}

task copyBuildXml(type: Copy) {
    from 'build.properties'
    into 'output'
}

task apiZip(type: Zip) {
    classifier = 'api'
    from sourceSets*.allSource
    include 'projektor/api/**'
    destinationDir = file 'output'
}

import de.undercouch.gradle.tasks.download.Download

task getLibraries {
	def libsFolder = new File('lib')
	if (!libsFolder.isDirectory() ) {
		libsFolder.mkdirs()
	}

	def mtSource = 'http://minetweaker3.powerofbytes.com/download/MineTweaker3-Dev-1.7.10-3.0.9C.jar'
	def mtDest = new File('lib', 'MineTweaker3-Dev-1.7.10-3.0.9C.jar')


	if(!mtDest.exists() ){
		download {
			src mtSource
			dest mtDest
		}
	}
}

artifacts {
    archives apiZip
}

build.dependsOn "apiZip", "copyBuildXml", "getLibraries"
